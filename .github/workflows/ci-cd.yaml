name: CI/CD Pipeline

# CI runs automatically (free) - tests and builds only
on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  PYTHON_VERSION: '3.11'

jobs:
  # Job 1: CI - Always runs (FREE) - Tests and validation only
  test:
    name: Run Tests and Build Validation
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    # Main frontend build step for CI/CD
    - name: Build and Test Frontend
      run: scripts/build-test-frontend.sh -v

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Cache pip packages
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('services/*/requirements*.txt', 'services/common/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-cov

    - name: ðŸ§ª Run Unified Build and Tests
      run: |
        chmod +x scripts/build-test.sh
        # Uses 60% coverage threshold (target: 80% when all services have proper test coverage)
        ./scripts/build-test.sh --test-only --verbose

    - name: Upload test coverage
      uses: actions/upload-artifact@v4
      with:
        name: coverage-reports
        path: |
          services/*/htmlcov/
          services/*/coverage.xml
        retention-days: 7

    - name: ðŸ“Š Test Summary
      run: |
        echo "=== ðŸ§ª CI Pipeline Summary ==="
        echo ""
        echo "âœ… Frontend: Built and tested"
        echo "âœ… Backend Services: Built and tested"
        echo "âœ… Coverage: Reports uploaded"
        echo ""
        echo "ðŸŽ‰ CI pipeline completed successfully!"
        echo "ðŸ’° Cost: $0 (no AWS resources used)"