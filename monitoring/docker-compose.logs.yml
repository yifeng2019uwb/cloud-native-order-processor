services:
  # Loki - Log database
  loki:
    image: grafana/loki:2.9.0
    container_name: loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - ./loki:/etc/loki
      - loki-data:/loki
    networks:
      - monitoring
    environment:
      - LOKI_CONFIG=/etc/loki/local-config.yaml

  # Promtail - Log shipper
  promtail:
    image: grafana/promtail:2.9.0
    container_name: promtail
    volumes:
      - ./promtail:/etc/promtail
      - /var/run/docker.sock:/var/run/docker.sock:ro  # Docker socket for container log discovery
      # Mount service log directories from application services
      - ../docker/logs:/var/log/services:ro
    command: -config.file=/etc/promtail/config.yml
    depends_on:
      - loki
    networks:
      - monitoring

  # Prometheus - Metrics collection (internal, no direct port exposure)
  prometheus:
    image: prom/prometheus:v2.45.0
    container_name: prometheus
    # No external ports - accessed via nginx reverse proxy
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=15d'
      - '--web.enable-lifecycle'
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus-data:/prometheus
    depends_on:
      - loki
    networks:
      - monitoring
      - order-processor-network
    restart: unless-stopped

  # Nginx reverse proxy for Prometheus with basic auth
  prometheus-proxy:
    image: nginx:alpine
    container_name: prometheus-proxy
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./prometheus/.htpasswd:/etc/nginx/.htpasswd:ro
    depends_on:
      - prometheus
    networks:
      - monitoring
    restart: unless-stopped

  # Grafana - Web interface (requires authentication)
  grafana:
    image: grafana/grafana:10.1.0
    container_name: grafana
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_SECURITY_ADMIN_USER=admin
      - GF_AUTH_ANONYMOUS_ENABLED=false
      - GF_AUTH_DISABLE_LOGIN_FORM=false
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    depends_on:
      - loki
      - prometheus
    networks:
      - monitoring

volumes:
  loki-data:
  grafana-data:
  prometheus-data:

networks:
  monitoring:
    driver: bridge
  order-processor-network:
    external: true
    name: order-processor-network
