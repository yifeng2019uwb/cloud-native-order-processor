# Monitoring Infrastructure - Base Configuration
# This file defines the monitoring stack that can be deployed across environments

apiVersion: v1
kind: ConfigMap
metadata:
  name: monitoring-config
  namespace: order-processor
data:
  # Loki configuration
  loki-config.yaml: |
    auth_enabled: false

    server:
      http_listen_port: 3100
      grpc_listen_port: 9096

    common:
      path_prefix: /loki
      storage:
        filesystem:
          chunks_directory: /loki/chunks
          rules_directory: /loki/rules
      replication_factor: 1
      ring:
        instance_addr: 127.0.0.1
        kvstore:
          store: inmemory

    query_range:
      results_cache:
        cache:
          embedded_cache:
            enabled: true
            max_size_mb: 100

    schema_config:
      configs:
        - from: 2020-10-24
          store: boltdb-shipper
          object_store: filesystem
          schema: v11
          index:
            prefix: index_
            period: 24h

    ruler:
      alertmanager_url: http://alertmanager:9093

    limits_config:
      retention_period: 720h  # 30 days

  # Promtail configuration
  promtail-config.yaml: |
    server:
      http_listen_port: 9080
      grpc_listen_port: 0

    positions:
      filename: /tmp/positions.yaml

    clients:
      - url: http://loki:3100/loki/api/v1/push

    scrape_configs:
      # FastAPI JSON logs from your services
      - job_name: fastapi-services
        static_configs:
          - targets:
              - localhost
            labels:
              job: fastapi-services
              __path__: /var/log/services/*/logs/*.log

        pipeline_stages:
          # Parse JSON logs
          - json:
              expressions:
                timestamp: timestamp
                level: level
                service: service
                request_id: request_id
                action: action
                message: message
                user: user
                duration_ms: duration_ms

          # Extract labels for filtering
          - labels:
              service:
              level:
              action:
              user:

          # Set timestamp
          - timestamp:
              source: timestamp
              format: RFC3339

      # Docker container logs
      - job_name: docker-containers
        docker_sd_configs:
          - host: unix:///var/run/docker.sock
            refresh_interval: 5s

        relabel_configs:
          - source_labels: [__meta_docker_container_name]
            target_label: container_name
          - source_labels: [__meta_docker_container_log_stream]
            target_label: log_stream

        pipeline_stages:
          - json:
              expressions:
                timestamp: timestamp
                level: level
                service: service
                message: message
          - labels:
              service:
              level:

  # Grafana datasource configuration
  grafana-datasources.yaml: |
    apiVersion: 1

    datasources:
      - name: Loki
        type: loki
        access: proxy
        url: http://loki:3100
        isDefault: true
        version: 1
        editable: false

---
# Loki Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: loki
  namespace: order-processor
  labels:
    app: loki
    component: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: loki
  template:
    metadata:
      labels:
        app: loki
        component: monitoring
    spec:
      containers:
      - name: loki
        image: grafana/loki:2.9.0
        ports:
        - containerPort: 3100
          name: http
        - containerPort: 9096
          name: grpc
        command:
        - "-config.file=/etc/loki/loki-config.yaml"
        volumeMounts:
        - name: loki-config
          mountPath: /etc/loki
        - name: loki-storage
          mountPath: /loki
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
      volumes:
      - name: loki-config
        configMap:
          name: monitoring-config
          items:
          - key: loki-config.yaml
            path: loki-config.yaml
      - name: loki-storage
        emptyDir: {}

---
# Loki Service
apiVersion: v1
kind: Service
metadata:
  name: loki
  namespace: order-processor
  labels:
    app: loki
    component: monitoring
spec:
  ports:
  - port: 3100
    targetPort: 3100
    protocol: TCP
    name: http
  - port: 9096
    targetPort: 9096
    protocol: TCP
    name: grpc
  selector:
    app: loki

---
# Promtail Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: promtail
  namespace: order-processor
  labels:
    app: promtail
    component: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: promtail
  template:
    metadata:
      labels:
        app: promtail
        component: monitoring
    spec:
      containers:
      - name: promtail
        image: grafana/promtail:2.9.0
        ports:
        - containerPort: 9080
          name: http
        command:
        - "-config.file=/etc/promtail/promtail-config.yaml"
        volumeMounts:
        - name: promtail-config
          mountPath: /etc/promtail
        - name: service-logs
          mountPath: /var/log/services
          readOnly: true
        - name: docker-socket
          mountPath: /var/run/docker.sock
          readOnly: true
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "256Mi"
            cpu: "200m"
      volumes:
      - name: promtail-config
        configMap:
          name: monitoring-config
          items:
          - key: promtail-config.yaml
            path: promtail-config.yaml
      - name: service-logs
        hostPath:
          path: /var/log/services
          type: DirectoryOrCreate
      - name: docker-socket
        hostPath:
          path: /var/run/docker.sock
          type: Socket

---
# Promtail Service
apiVersion: v1
kind: Service
metadata:
  name: promtail
  namespace: order-processor
  labels:
    app: promtail
    component: monitoring
spec:
  ports:
  - port: 9080
    targetPort: 9080
    protocol: TCP
    name: http
  selector:
    app: promtail

---
# Grafana Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: order-processor
  labels:
    app: grafana
    component: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
        component: monitoring
    spec:
      containers:
      - name: grafana
        image: grafana/grafana:10.1.0
        ports:
        - containerPort: 3000
          name: http
        env:
        - name: GF_SECURITY_ADMIN_PASSWORD
          value: "admin123"  # Should be moved to secrets in production
        - name: GF_SECURITY_ADMIN_USER
          value: "admin"
        volumeMounts:
        - name: grafana-storage
          mountPath: /var/lib/grafana
        - name: grafana-datasources
          mountPath: /etc/grafana/provisioning/datasources
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
      volumes:
      - name: grafana-storage
        emptyDir: {}
      - name: grafana-datasources
        configMap:
          name: monitoring-config
          items:
          - key: grafana-datasources.yaml
            path: loki.yml

---
# Grafana Service
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: order-processor
  labels:
    app: grafana
    component: monitoring
spec:
  type: NodePort
  ports:
  - port: 3000
    targetPort: 3000
    protocol: TCP
    name: http
    nodePort: 30001
  selector:
    app: grafana
