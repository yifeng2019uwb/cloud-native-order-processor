apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: order-processor-ingress
  namespace: order-processor
  labels:
    app: order-processor
    component: ingress
    environment: production
  annotations:
    kubernetes.io/ingress.class: "alb"
    alb.ingress.kubernetes.io/scheme: "internet-facing"
    alb.ingress.kubernetes.io/target-type: "ip"
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS": 443}]'
    alb.ingress.kubernetes.io/certificate-arn: "arn:aws:acm:us-east-1:${AWS_ACCOUNT_ID}:certificate/your-certificate-id"
    alb.ingress.kubernetes.io/ssl-redirect: "443"
    alb.ingress.kubernetes.io/healthcheck-path: "/health"
    alb.ingress.kubernetes.io/healthcheck-port: "8000"
    alb.ingress.kubernetes.io/healthcheck-protocol: "HTTP"
    alb.ingress.kubernetes.io/success-codes: "200,302"
    alb.ingress.kubernetes.io/group.name: "order-processor"
    alb.ingress.kubernetes.io/group.order: "1"
spec:
  rules:
  - host: "api.order-processor.yourdomain.com"
    http:
      paths:
      - path: /auth
        pathType: Prefix
        backend:
          service:
            name: user-service
            port:
              number: 8000
      - path: /inventory
        pathType: Prefix
        backend:
          service:
            name: inventory-service
            port:
              number: 8001
      - path: /health
        pathType: Prefix
        backend:
          service:
            name: user-service
            port:
              number: 8000
  - host: "order-processor.yourdomain.com"
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: frontend
            port:
              number: 3000
  - host: "www.order-processor.yourdomain.com"
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: frontend
            port:
              number: 3000