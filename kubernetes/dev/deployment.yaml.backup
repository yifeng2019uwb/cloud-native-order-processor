apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-service
  namespace: order-processor
  labels:
    app: order-processor
    component: user-service
    environment: local
spec:
  replicas: 1
  selector:
    matchLabels:
      app: order-processor
      component: user-service
  template:
    metadata:
      labels:
        app: order-processor
        component: user-service
        environment: local
    spec:
      serviceAccountName: order-processor-sa
      containers:
      - name: user-service
        image: order-processor-user_service:latest
        imagePullPolicy: Never  # Use local image for Kind
        ports:
        - containerPort: 8000
          name: http
        env:
        - name: ENVIRONMENT
          value: "dev"
        - name: USERS_TABLE
          value: "order-processor-dev-users"
        - name: ORDERS_TABLE
          value: "order-processor-dev-orders"
        - name: INVENTORY_TABLE
          value: "order-processor-dev-inventory"
        - name: JWT_SECRET
          value: "local-dev-secret-key"
        - name: AWS_REGION
          value: "us-west-2"
        - name: AWS_ROLE_ARN
          value: "arn:aws:iam::940482447349:role/order-processor-dev-application-service-role"
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: aws-credentials
              key: aws-access-key-id
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: aws-credentials
              key: aws-secret-access-key
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: inventory-service
  namespace: order-processor
  labels:
    app: order-processor
    component: inventory-service
    environment: local
spec:
  replicas: 1
  selector:
    matchLabels:
      app: order-processor
      component: inventory-service
  template:
    metadata:
      labels:
        app: order-processor
        component: inventory-service
        environment: local
    spec:
      serviceAccountName: order-processor-sa
      containers:
      - name: inventory-service
        image: order-processor-inventory_service:latest
        imagePullPolicy: Never  # Use local image for Kind
        ports:
        - containerPort: 8001
          name: http
        env:
        - name: ENVIRONMENT
          value: "dev"
        - name: USERS_TABLE
          value: "order-processor-dev-users"
        - name: ORDERS_TABLE
          value: "order-processor-dev-orders"
        - name: INVENTORY_TABLE
          value: "order-processor-dev-inventory"
        - name: AWS_REGION
          value: "us-west-2"
        - name: AWS_ROLE_ARN
          value: "arn:aws:iam::940482447349:role/order-processor-dev-application-service-role"
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: aws-credentials
              key: aws-access-key-id
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: aws-credentials
              key: aws-secret-access-key
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8001
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8001
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: order-processor
  labels:
    app: order-processor
    component: frontend
    environment: local
spec:
  replicas: 1
  selector:
    matchLabels:
      app: order-processor
      component: frontend
  template:
    metadata:
      labels:
        app: order-processor
        component: frontend
        environment: local
    spec:
      serviceAccountName: order-processor-sa
      containers:
      - name: frontend
        image: order-processor-frontend:latest
        imagePullPolicy: Never  # Use local image for Kind
        ports:
        - containerPort: 3000
          name: http
        env:
        - name: REACT_APP_API_URL
          value: "http://localhost:30000"  # NodePort service
        - name: REACT_APP_USER_SERVICE_URL
          value: "http://localhost:30001"
        - name: REACT_APP_INVENTORY_SERVICE_URL
          value: "http://localhost:30002"
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
        livenessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5